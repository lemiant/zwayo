html
    head
        //-Compatibility
        meta(charset='utf-8')
        meta(http-equiv='X-UA-Compatible', content='IE=edge')
        meta(name='viewport', content='width=device-width, initial-scale=1')
        
        //- Title and Icon
        link(rel='shortcut icon', href='imgs/icon/icon.png')
        title Zwayo
        
        //- Latest compiled and minified CSS
        link(rel='stylesheet', href='//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css')
        
        //- CSS
        link(href="css/cover.css" rel="stylesheet")
        link(href="css/queue.css" rel="stylesheet")
    body.deselect
        .site-wrapper
          .site-wrapper-inner
            .cover-container
              .masthead.clearfix
                .inner
                  a(href="#").deselect
                    img(src='imgs/icon/logo2.png').logo.masthead-brand
                    h3.tech.masthead-brand Zwayo
                  ul.nav.masthead-nav.deselect
                    li#menuPrevious.active
                      a(href='#', id='linkPrevious')
                        img(src='imgs/nav/previous.png')
                    li#menuPlayPause
                      a(href='#', id='linkPlayPause')
                        img(src='imgs/nav/play.png').playPause
                    li#menuNext
                      a(href='#', id='linkNext')
                        img(src='imgs/nav/next.png')
              .inner.cover
                  #queue_wrapper.add-songs
                    a.btn.btn-lg.btn-default.btn-block + Add Music
                    //- TODO: the rest is totally broken right now
                    #queue.queue
                        script(id="__queue_item_tmpl", type="text/html")
                            div.item(id="{{id}}")
                                img(src="{{body.thumb}}")
                                p.song_title {{body.title.ellipsis_truncate(60)}}
                                p.song_guest Added by {{body.guest.ellipsis_truncate(30)}}
                        #player_div.item(style="display:none")
                            #player
                    #play_button_div(style="padding: 8px; text-align:center; display: none;")
                        a#play.btn.btn-lg.btn-default.btn-block &nbsp;Play All&nbsp;
              .mastfoot
                .inner
                    p Â© 2014 Zwayo
    
    
    //- jQuery (necessary for Bootstrap's JavaScript plugins)
    script(src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js")
    //- Bootstrap core JavaScript
    script(src='//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js')
    //- add JS here
    script(src='js/actions.js')

    //- Script loading functions
    script.
        function exists(identifiers){
            if(typeof identifiers == 'string') identifiers = [identifiers]
            for(var n=0; n<identifiers.length; n++){
                //console.log(identifiers)
                var parts = identifiers[n].split('.')
                node = window
                for(var i=0; i<parts.length; i++){
                    node = node[parts[i]]
                    if(typeof node == 'undefined') return false
                }
            }
            return true
        }
        function fallback(identifiers, backup){
            if(!exists(identifiers)) document.write('<script type="text/javascript" src="'+backup+'"></'+'script>');
        }
        function blocked_callback(identifiers, callback, refresh_rate){
            if(!refresh_rate) var refresh_rate = 50;
            return function(){
                if(exists(identifiers)) callback.apply(this, arguments)
                else{
                    var t = this
                    var args = arguments
                    setTimeout(function(){ blocked_callback(identifiers, callback).apply(t, args) }, refresh_rate)
                }
            }
        }

    //- Rendering Functions
    script.
        last_update = 0
        function get_queue_actions(){
            $.ajax({
                url: "server/get_queue_actions.php",
                dataType: 'json',
                type: 'post',
                data: {last: last_update},
                success: blocked_callback(['templating', 'jQuery.fn.doubletap'], make_queue) //Default 50ms refresh
            })
        }
        function make_queue(){
            window.queue_item_tmpl = _.template($('#__queue_item_tmpl').html());
            update_queue.apply(this, arguments)
        }
        function update_queue(js, status){
            if(status == "success" && js.result == "success"){
                queue = $('#queue')
                for(i=0; i<js.items.length; i++){
                    apply(js.items[i], queue)
                }
                if(js.items.length > 0) last_update = js.items[js.items.length-1].id
            }
            setTimeout(get_queue_actions, 2500)
        }
        function apply(rule, list){
            rule.body = $.parseJSON(rule.body)
            if(rule.action == 'add'){
                tr = $(queue_item_tmpl(rule))
                tr.data("videoId", rule.body.videoId)
                tr.doubletap(function(e){ play($(e.currentTarget)) }, function(){}, 400)
                list.prepend(tr)
            }
            else if(rule.action == 'set_active' && player_div.css('display') == 'none'){
                set_active(rule.body.active_id)
            }
        }

        function set_active(id){
            $('div.active').removeClass('active')
            $('div#'+id).addClass('active')
        }
        function send_set_active(id){
            $.ajax({
                url: 'server/set_queue_action.php',
                type: 'post',
                data: {action: 'set_active',
                        body: {active_id: id}}
            })
            set_active(id)
        }

        String.prototype.ellipsis_truncate = function(size){
            if(this.length > size){
                return this.slice(0,size-4)+"..."
            }
            return this
        }

        get_queue_actions()

    script(src="js/jquery.doubletap.js")
    script(src="//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.5.2/underscore-min.js")
    //- Initialize Underscore template syntax
    //- Youtube functions
    //- Load search.js
    script.
        _.templateSettings = {
          interpolate : /\{\{(.+?)\}\}/g,
          execute : /\{\%(.+?)\%\}/g
        };
        window.templating = true //Flag for queue rendering

    //- Youtube Functions
    script.
        window.player_div = $('#player_div')

        //Load youtube API async
        var tag = document.createElement('script');
        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        function play(t){
            place_after(t)
            play_above()
        }
        function place_after(t){
            t = $(t)
            while(t.next('#player_div').length == 0){
                if(t.prevAll('#player_div').length){ //is above
                    player_div.before(player_div.next())
                } else if(t.nextAll('#player_div').length){
                    player_div.after(player_div.prev())
                }
            }
        }
        function play_above(){
            var above = player_div.prev()
            player_div.show()
            videoId = above.data('videoId')
            player.loadVideoById({videoId: videoId, suggestedQuality: 'small'})
            send_set_active(above.attr('id'))
        }

        function onYouTubeIframeAPIReady(){
            window.player = new YT.Player('player', {
                height: '200',
                width: '300',
                playerVars: {
                    playsinline: 1
                },
                events: {
                    onReady: onPlayerReady,
                    onStateChange: onPlayerStateChange
                }
            });
        }
        function onPlayerReady(e){
            $('#play_button_div').show()
            $('#play').on('click', function(){
                place_after($('#queue .item').not(player_div).last())
                play_above()
            })
            if(player_div.css('display') != 'none') play_above(); //We tried to play a song without the YoutubeAPI
        }
        function onPlayerStateChange(e){
            if(e.data == 0){
                console.log(player_div.prevAll('.item'))
                if(player_div.prevAll('.item').length >= 2){
                    place_after(player_div.prevAll('.item')[1])
                    play_above()
                }
                else{
                    play($('#queue .item').not('#player_div').last())
                }
            }
        }

    //- Load search.html
    script.
        $.ajax('search').success(function(result){
            $('body').append(result)
            $("#add_music_button").on('click', function(){
                $('#queue_wrapper').hide()
                $('#search_wrapper').show()
            })
        })
